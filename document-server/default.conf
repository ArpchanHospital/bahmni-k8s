# js_path "/etc/nginx/njs/";
js_import /etc/nginx/conf.d/http.js;

js_set $foo     http.foo;
js_set $requested_document http.requestedDocument;
# js_set $summary http.summary;
# js_set $hash    http.hash;

server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;
    #access_log  /var/log/nginx/host.access.log  main;
    error_log /var/log/nginx/error.log notice;
    rewrite_log on;
    underscores_in_headers on;

    resolver kube-dns.kube-system.svc.cluster.local valid=10s;

    root   /usr/share/nginx/html;
    index  index.html index.htm;

    location /document_images {
        add_header requested_document "$uri" always;
        rewrite ^(.*) https://$host/openmrs/auth?requested_document=$uri permanent;
        # try_files $uri $uri/ =404;
    }

    location /openmrs/session {
        subrequest_output_buffer_size 200000;
        client_body_buffer_size 200000;
        proxy_method      GET;
        proxy_set_header accept "application/json";
        proxy_set_header Content-Type "application/json";
        proxy_pass http://openmrs.default.svc.cluster.local:8080/openmrs/ws/rest/v1/session;
    }

    location = /openmrs/auth {
        subrequest_output_buffer_size 200000;
        client_body_buffer_size 200000;
        # http://openmrs.default.svc.cluster.local:8080
        # kubectl exec -it <pod name> -- cat /etc/resolv.conf
        # resolver 10.96.0.10 valid=10s;
        # resolver kube-dns.kube-system.svc.cluster.local valid=10s;
        add_header X-debug-message $requested_document always;
        # try_files $requested_document $requested_document/ =404;
        js_content                   http.auth;
    }

    # location @rewrite {
    #     rewrite ^/openmrs/auth\?requested_document=(.*)%20(.*) $1$3 break;
    # }

    location /foo {
        add_header X-Foo $foo;
        js_content http.baz;
    }

    location = /summary {
        # return 200 $summary;
        js_content http.summary;
    }

    # # since 0.7.0
    # location = /fetch {
    #     js_content                   http.fetch;
    #     js_fetch_trusted_certificate /path/to/ISRG_Root_X1.pem;
    # }

    # # since 0.7.0
    # location = /crypto {
    #     add_header Hash $hash;
    #     return     200;
    # }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}